name: Database Read Check

on:
  schedule:
    # Runs every 5 days at 2:00 AM UTC
    - cron: '0 2 */5 * *'
  workflow_dispatch: # Allows manual triggering

jobs:
  database-read:
    runs-on: ubuntu-latest
    timeout-minutes: 10  # Prevent hanging jobs
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --omit=dev
      
      - name: Run database read check
        id: db-check
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          node .github/scripts/database-read.js
          echo "status=$?" >> $GITHUB_OUTPUT
      
      - name: Report success
        if: steps.db-check.outputs.status == '0'
        run: echo "✅ Database read check completed successfully"
      
      - name: Report failure
        if: steps.db-check.outputs.status != '0'
        run: |
          echo "❌ Database read check failed"
          exit 1
      
      - name: Create issue on failure
        if: failure() && github.event_name == 'schedule'
        uses: actions/github-script@v7
        with:
          script: |
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Database Read Check Failed',
              body: `The scheduled database read check failed on ${new Date().toISOString()}.
              
              Please check:
              - Database connection string
              - Database server status
              - Network connectivity
              
              [View workflow run](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})`
            });
            console.log(`Created issue #${issue.data.number}`)