name: Database Read Check

on:
  schedule:
    # Runs every 5 days at 2:00 AM UTC
    - cron: '0 2 */5 * *'
  workflow_dispatch: # Allows manual triggering

jobs:
  database-read:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --only=production
      
      - name: Run database read check
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: node -e "
          const { Pool } = require('pg');
          
          const pool = new Pool({
            connectionString: process.env.DATABASE_URL,
            ssl: {
              rejectUnauthorized: false,
            },
          });
          
          async function runDatabaseRead() {
            try {
              console.log('üîç Starting database read check...');
              
              // Simple read operation - check if database is accessible
              const result = await pool.query('SELECT NOW() as current_time, version() as db_version');
              
              console.log('‚úÖ Database read successful!');
              console.log('üìÖ Current time:', result.rows[0].current_time);
              console.log('üîß Database version:', result.rows[0].db_version.split(' ')[0]);
              
              // Optional: Check table count to verify schema exists
              const tableCount = await pool.query(
                \"SELECT count(*) as table_count FROM information_schema.tables WHERE table_schema = 'public'\"
              );
              
              console.log('üìä Public tables count:', tableCount.rows[0].table_count);
              
              process.exit(0);
            } catch (error) {
              console.error('‚ùå Database read failed:', error.message);
              process.exit(1);
            } finally {
              await pool.end();
            }
          }
          
          runDatabaseRead();
        "
      
      - name: Report status
        if: always()
        run: |
          if [ $? -eq 0 ]; then
            echo "‚úÖ Database read check completed successfully"
          else
            echo "‚ùå Database read check failed"
          fi